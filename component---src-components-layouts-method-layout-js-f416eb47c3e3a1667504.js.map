{"version":3,"sources":["webpack:///./src/components/layouts/method-layout.js"],"names":["MethodHeadline","styled","InpageHeadline","media","mediumUp","MethodIntro","article","MethodMeta","aside","ActivityList","section","CardList","ActivityCard","Card","CardHeading","MethodLayout","data","location","method","childMarkdownRemark","frontmatter","frontmattermd","fields","activities","edges","activityNodes","forEach","activity","node","title","slug","excerpt","summary","references","referenceNodes","reference","html","state","prevPath","prevPage","sections","mapValues","replace","withPrefix","columnLayout","direction","to","startsWith","size","variation","withDeco","dangerouslySetInnerHTML","__html","purpose","boldDesc","authors","info_provided","required","the_flow_of_information","guiding_questions","operational_security","border","preparation","outputs","map","index","key","as","Link","withHover","query"],"mappings":"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","file":"component---src-components-layouts-method-layout-js-f416eb47c3e3a1667504.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { graphql, Link, withPrefix } from \"gatsby\"\nimport styled from \"styled-components\"\nimport mapValues from \"lodash.mapvalues\"\n\nimport GlobalLayout from \"./global-layout\"\nimport SEO from \"../seo\"\n\nimport {\n  Inpage,\n  InpageInnerColumns,\n  InpageHeader,\n  InpageHeadline,\n  InpageBody,\n  InpageTitle,\n} from \"../../styles/inpage\"\n\nimport MoreLink from \"../../styles/button/more-link\"\nimport Dl, { SquareUl } from \"../../styles/type/lists\"\nimport media from \"../../styles/utils/media-queries\"\nimport Card, { CardHeading, CardList } from \"../../styles/card\"\n\nconst MethodHeadline = styled(InpageHeadline)`\n  ${media.mediumUp`\n    grid-column: span 2;\n  `}\n`\n\nconst MethodIntro = styled.article`\n  display: flex;\n  flex-flow: column nowrap;\n  p {\n    max-width: 60ch;\n    &:first-of-type {\n      &::first-line {\n        text-transform: uppercase;\n        font-weight: bold;\n      }\n    }\n  }\n`\nconst MethodMeta = styled.aside``\n\nconst ActivityList = styled.section`\n  grid-column: span 2;\n\n  ${CardList} {\n    margin-top: 2rem;\n  }\n`\nconst ActivityCard = styled(Card)`\n  ${media.mediumUp`\n    min-height: 6rem;\n  `}\n  ${CardHeading} {\n    margin: 0;\n  }\n`\n\nfunction MethodLayout({ data, location }) {\n  const {\n    frontmatter,\n    fields: { frontmattermd },\n  } = data.method.childMarkdownRemark\n\n  // creates an object with activity names as keys and activity slugs as values\n  let activities = data.activities.edges\n  const activityNodes = {}\n  activities.forEach(\n    activity =>\n      (activityNodes[activity.node.childMarkdownRemark.frontmatter.title] = {\n        slug: activity.node.fields.slug,\n        excerpt:\n          activity.node.childMarkdownRemark.fields.frontmattermd.summary\n            ?.excerpt,\n      })\n  )\n\n  // creates an object with reference names as keys and reference slugs as values\n  let references = data.references.edges\n  const referenceNodes = {}\n  references.forEach(\n    reference =>\n      (referenceNodes[reference.node.childMarkdownRemark.frontmatter.title] = {\n        title: reference.node.childMarkdownRemark.frontmatter.title,\n        html: reference.node.childMarkdownRemark.html,\n      })\n  )\n\n  const { state: { prevPath, prevPage } = {} } = location\n\n  // Fix images URL by adding app root url with prefix\n  const sections = mapValues(frontmattermd, section => {\n    if (section && section.html) {\n      return section.html.replace(\n        /<img src=\"\\/img/g,\n        `<img src=\"${withPrefix(\"/img\")}`\n      )\n    }\n    return section\n  })\n\n  return (\n    <GlobalLayout>\n      <SEO title={`Method: ` + frontmatter.title} />\n      <Inpage>\n        <InpageHeader>\n          <InpageInnerColumns columnLayout=\"2:1\">\n            <MethodHeadline>\n              <MoreLink\n                direction=\"back\"\n                to={\n                  prevPath?.startsWith(\"/guide-builder\")\n                    ? prevPage\n                    : \"/#allMethods\"\n                }\n              >\n                Back to {prevPath ? \"guide builder\" : \"all methods\"}\n              </MoreLink>\n              <InpageTitle size=\"jumbo\" variation=\"primary\">\n                {frontmatter.title}\n              </InpageTitle>\n            </MethodHeadline>\n            <MethodIntro>\n              <InpageTitle size=\"large\" withDeco>\n                Summary\n              </InpageTitle>\n              <p\n                dangerouslySetInnerHTML={{ __html: frontmattermd.summary.html }}\n              ></p>\n              <InpageTitle size=\"large\" withDeco>\n                Purpose\n              </InpageTitle>\n              <p\n                dangerouslySetInnerHTML={{ __html: frontmattermd.purpose.html }}\n              ></p>\n            </MethodIntro>\n            <MethodMeta>\n              <Dl boldDesc>\n                <dt>Author</dt>\n                <dd>{frontmatter.authors}</dd>\n                {frontmatter.info_provided !== \"\" && (\n                  <>\n                    <dt>Info Provided</dt>\n                    <dd>{frontmatter.info_provided}</dd>\n                    <dt>Info Required</dt>\n                    <dd>{frontmatter.required}</dd>\n                  </>\n                )}\n              </Dl>\n            </MethodMeta>\n          </InpageInnerColumns>\n        </InpageHeader>\n        <InpageBody>\n          <InpageInnerColumns columnLayout=\"2:1\">\n            <section>\n              {sections.the_flow_of_information && (\n                <>\n                  <InpageTitle size=\"large\" withDeco>\n                    The Flow of Information\n                  </InpageTitle>\n                  <SquareUl\n                    dangerouslySetInnerHTML={{\n                      __html: sections.the_flow_of_information,\n                    }}\n                  ></SquareUl>\n                </>\n              )}\n              <InpageTitle size=\"large\" withDeco>\n                Guiding Questions\n              </InpageTitle>\n              <SquareUl\n                dangerouslySetInnerHTML={{\n                  __html: sections.guiding_questions,\n                }}\n              ></SquareUl>\n            </section>\n            <section></section>\n          </InpageInnerColumns>\n          <InpageInnerColumns columnLayout=\"1:1\">\n            {sections.operational_security && (\n              <Card border=\"base\">\n                <CardHeading>Operational Security</CardHeading>\n                <div\n                  dangerouslySetInnerHTML={{\n                    __html: sections.operational_security,\n                  }}\n                ></div>\n              </Card>\n            )}\n            {sections.preparation && (\n              <Card border=\"base\">\n                <CardHeading>Preparation</CardHeading>\n                <SquareUl\n                  dangerouslySetInnerHTML={{\n                    __html: sections.preparation,\n                  }}\n                ></SquareUl>\n              </Card>\n            )}\n          </InpageInnerColumns>\n          <InpageInnerColumns columnLayout=\"2:1\">\n            <section>\n              {sections.outputs && (\n                <>\n                  <InpageTitle size=\"large\" withDeco>\n                    Outputs\n                  </InpageTitle>\n                  <SquareUl\n                    dangerouslySetInnerHTML={{\n                      __html: sections.outputs,\n                    }}\n                  ></SquareUl>\n                </>\n              )}\n            </section>\n          </InpageInnerColumns>\n        </InpageBody>\n        <InpageBody>\n          <InpageInnerColumns columnLayout=\"2:1\">\n            <section>\n              <InpageTitle size=\"large\" withDeco>\n                References\n              </InpageTitle>\n              <SquareUl>\n                {(frontmatter.references || []).map(reference => (\n                  <>\n                    <p>{referenceNodes[reference].title}:</p>\n                    <p\n                      dangerouslySetInnerHTML={{\n                        __html: referenceNodes[reference].html,\n                      }}\n                    ></p>\n                  </>\n                ))}\n              </SquareUl>\n            </section>\n            <section></section>\n            <ActivityList>\n              <InpageTitle size=\"large\" withDeco>\n                Activities\n              </InpageTitle>\n              <CardList>\n                {(frontmatter.activities || []).map((activity, index) => (\n                  <li key={index}>\n                    <ActivityCard\n                      as={Link}\n                      to={`${activityNodes[activity].slug}/`}\n                      border=\"primary\"\n                      variation=\"secondary\"\n                      withHover\n                    >\n                      <CardHeading variation=\"primary\">{activity}_</CardHeading>\n                      <p\n                        dangerouslySetInnerHTML={{\n                          __html: activityNodes[activity].excerpt,\n                        }}\n                      ></p>\n                    </ActivityCard>\n                  </li>\n                ))}\n              </CardList>\n            </ActivityList>\n          </InpageInnerColumns>\n        </InpageBody>\n      </Inpage>\n    </GlobalLayout>\n  )\n}\n\nMethodLayout.propTypes = {\n  data: PropTypes.object,\n  location: PropTypes.object,\n}\n\nexport default MethodLayout\n\nexport const query = graphql`\n  query($slug: String!) {\n    method: file(fields: { slug: { eq: $slug } }) {\n      childMarkdownRemark {\n        html\n        frontmatter {\n          title\n          authors\n          activities\n          info_provided\n          info_required\n          references\n        }\n        fields {\n          frontmattermd {\n            summary {\n              html\n            }\n            purpose {\n              html\n            }\n            the_flow_of_information {\n              html\n            }\n            guiding_questions {\n              html\n            }\n            preparation {\n              html\n            }\n            outputs {\n              html\n            }\n            operational_security {\n              html\n            }\n          }\n        }\n      }\n    }\n    activities: allFile(\n      filter: {\n        relativeDirectory: { eq: \"activities\" }\n        internal: { mediaType: { eq: \"text/markdown\" } }\n      }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          childMarkdownRemark {\n            frontmatter {\n              title\n            }\n            fields {\n              frontmattermd {\n                summary {\n                  excerpt\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    references: allFile(\n      filter: {\n        relativeDirectory: { eq: \"references\" }\n        internal: { mediaType: { eq: \"text/markdown\" } }\n      }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          childMarkdownRemark {\n            frontmatter {\n              title\n            }\n            html\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}